<!DOCTYPE html>
<html>
<head>
  <title>Data Entry App</title>
  <style>
    body { font-family: Arial; padding: 20px; }
    input, select, button { margin: 5px; padding: 5px; }
    table, th, td { border: 1px solid #ccc; border-collapse: collapse; padding: 5px; }
  </style>
</head>
<body>
  <h2>Master Data (Customers)</h2>
  <pre id="masterDataView"></pre>

  <h2>Add Entry</h2>
  <label>Customer:</label>
  <select id="customerSelect"></select>
  <label>Amount:</label>
  <input type="number" id="amountInput" />
  <button onclick="addEntry()">Add</button>

  <h2>Filter by Customer</h2>
  <select id="filterSelect"></select>
  <button onclick="filterData()">Filter</button>

  <h2>Modify Entry</h2>
  <label>ID:</label>
  <input type="number" id="modifyIdInput" />
  <label>New Amount:</label>
  <input type="number" id="modifyAmountInput" />
  <button onclick="modifyEntry()">Modify</button>

  <h2>Transaction Data</h2>
  <table id="dataTable">
    <thead>
      <tr><th>ID</th><th>Customer</th><th>Amount</th><th>Date</th></tr>
    </thead>
    <tbody></tbody>
  </table>

  <br />
  <button onclick="saveDataToFile()">Save Data</button>

  <script>
    const masterData = [
      { id: 1, name: "John Doe" },
      { id: 2, name: "Jane Smith" },
      { id: 3, name: "Acme Corp" }
    ];

    let transactionData = [];
    let idCounter = 1;

    function populateCustomerSelect() {
      const customerSelect = document.getElementById("customerSelect");
      const filterSelect = document.getElementById("filterSelect");
      customerSelect.innerHTML = "";
      filterSelect.innerHTML = "<option value=''>-- All --</option>";
      masterData.forEach(c => {
        const opt = new Option(c.name, c.id);
        customerSelect.add(opt.cloneNode(true));
        filterSelect.add(opt);
      });
    }

    function displayMasterData() {
      document.getElementById("masterDataView").textContent = JSON.stringify(masterData, null, 2);
    }

    function addEntry() {
      const customerId = +document.getElementById("customerSelect").value;
      const amount = +document.getElementById("amountInput").value;
      const customer = masterData.find(c => c.id === customerId);
      if (!customer || isNaN(amount)) return alert("Please fill in valid data.");

      transactionData.push({
        id: idCounter++,
        customerId,
        customerName: customer.name,
        amount,
        date: new Date().toISOString().split("T")[0]
      });
      renderTable(transactionData);
    }

    function filterData() {
      const customerId = +document.getElementById("filterSelect").value;
      const filtered = customerId
        ? transactionData.filter(entry => entry.customerId === customerId)
        : transactionData;
      renderTable(filtered);
    }

    function modifyEntry() {
      const id = +document.getElementById("modifyIdInput").value;
      const newAmount = +document.getElementById("modifyAmountInput").value;
      const entry = transactionData.find(e => e.id === id);
      if (!entry) return alert("Entry not found.");
      entry.amount = newAmount;
      renderTable(transactionData);
    }

    function renderTable(data) {
      const tbody = document.querySelector("#dataTable tbody");
      tbody.innerHTML = "";
      data.forEach(entry => {
        const row = tbody.insertRow();
        row.innerHTML = `<td>${entry.id}</td><td>${entry.customerName}</td><td>${entry.amount}</td><td>${entry.date}</td>`;
      });
    }

    function saveDataToFile() {
      const blob = new Blob([JSON.stringify(transactionData, null, 2)], { type: "application/json" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = "transactionData.json";
      a.click();
      URL.revokeObjectURL(url);
    }

    // Initialize
    displayMasterData();
    populateCustomerSelect();
  </script>
</body>
</html>
